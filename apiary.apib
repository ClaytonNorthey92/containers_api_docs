FORMAT: 1A
HOST: http://containers-api.compology.com/


# Compology Containers API

**VERSION 2 (v2) FOR RELEASE**

The Compology API allows you to query data about your containers.

The API is based on REST principles, making it conform to industry-standard
approaches, and making it easy to implement and test clients. You can use
**curl** to test URLs and you can use any programming language to interact
with the API.

Use cases of this API include (but are not limited to):

 * Getting a list of containers
 * Getting a list of containers for a specific customer
 * Getting a list of device posts for a specific container


## Authentication
API access will be supported only via HTTPS.

Users of this API will receive a JWT token. When a client makes a request to the API, this token shall be included in the `Authorization` header.

The header shall be formatted thusly: `Bearer <your token>`.

## Rate limiting
Excessive requests to this API will be denied via rate limiting.

## Error handling

### 200s
Successes will be HTTP responses with status codes between 200-299.

### 400s
Client errors will be indicated by HTTP responses with status codes between 400-499.

This level of error will be accompanied by an HTTP body containing JSON data with descriptive information about the error.

### 500s
Server-side or network errors will be indicated by HTTP responses with status codes between 500-599.

## Standard Responses

Non-error responses from this API will be a single JSON object. Top-level
keys of this object are standardized:

 * "payload" - This is the main body of the response and usually what the API
   client is most interested in.
 * "client" - This contains advised or required HTTP headers and other
   information that the client may wish to include in requests.
 * "next" - *optional* - if the HTTP REST resource is a collection, this
   will be a link to the next page in the collection.
 * "prev" - *optional* - if the HTTP REST resource is a collection, this
   will be a link to the previous page in the collection.

Note, "next" and "prev" keys can sometimes point to an empty page. For
example, if a client navigates past the last page or previous to the
first page. It is up to the client to determine the boundaries of the
collection, and not rely on "next" and "prev" to decide this. This can
easily be done by starting at the first page and iterating forward until
the API responds with an empty page.


## Containers [/containers]

### List All Containers [GET]

#### Parameters
 * `cursor` optional

#### example
```bash
export BASE=https://containers-api.compology.com/v2
export AUTH="Authorization: Bearer <your auth token>"
curl -H 'Accept: application/json' -H "$AUTH" ${BASE}/containers
```

+ Response 200 (application/json)

    + Body

            {
            "payload": [
             {
              "id": "DRAGNDROPWASTE_00022",
              "containerType": "roll off",
              "contentType": "refuse",
              "cubicYards": 20,
              "description": "20-0013",
              "externalId": "7J2TT262M2PX",
              "hasAccuratePosition": true,
              "lastClassifiedCameraBlocked": false,
              "lastGpsIsAccurate": true,
              "lastImageTimestamp": "2018-10-15T20:06:19.780Z",
              "lastImageUrl": "https://images.staging.compology.com/1/raw_device_data/36731111-1111-1111-1111-c7c82e7fc79e",
              "level": 0,
              "location": {},
              "locationUpdatedAt": "2018-08-11T06:03:51.922Z",
              "latitude": 37.771789,
              "longitude": -122.407272,
              "maybeLastEmptiedAt": "2018-06-12T19:58:11.000Z",
              "pendingClassification": true,
              "positionAccuracy": 15,
              "technicianAssigned": true,
              "updatedAt": "2019-07-23T23:54:26.057Z"
            },
            {
              "id": "DRAGNDROPWASTE_00023",
              "containerType": "roll off",
              "contentType": "refuse",
              "cubicYards": 20,
              "description": "20-0014",
              "externalId": "NDHSYG067HN4",
              "hasAccuratePosition": true,
              "lastClassifiedCameraBlocked": true,
              "lastGpsIsAccurate": true,
              "lastImageTimestamp": "2019-07-26T20:39:56.922Z",
              "lastImageUrl": "https://images.staging.compology.com/1/raw_device_data/1da61111-1111-1111-1111-0ed886d837f1",
              "level": 100,
              "location": {
                "id": "090c1111-1111-1111-1111-789838c8d804",
                "externalId": null,
                "description": "Travis County Landfill",
                "street": "9600 812 Rd",
                "city": "Austin",
                "state": "Texas",
                "postalCode": "78719",
                "zip": "78719"
              },
              "locationUpdatedAt": "2019-07-25T22:39:55.392Z",
              "latitude": 30.210447,
              "longitude": -97.850021,
              "maybeLastEmptiedAt": "2018-06-27T21:02:13.000Z",
              "pendingClassification": false,
              "positionAccuracy": 30,
              "technicianAssigned": false,
              "updatedAt": "2019-07-26T20:41:33.851Z"
            }
            ],
              "client": [
                "X-Compology-Version: 2019-07-25/1"
              ]
            }

## Containers for a Customer [/customers/:customerId/containers]

### List All Containers [GET]

This endpoint uses the *internal* ID for the Customer.

#### Parameters
 * `cursor` optional

#### example
```bash
export BASE=https://containers-api.compology.com/v2
export AUTH="Authorization: Bearer <your auth token>"
curl -H 'Accept: application/json' -H "$AUTH" ${BASE}/customers/<customer id>/containers
```

+ Response 200 (application/json)

    + Body
    
            {
              "payload": [
                {
                  "id": "DRAGNDROPWASTE_00014",
                  "containerType": "roll off",
                  "contentType": "refuse",
                  "cubicYards": 20,
                  "description": "20-0009",
                  "externalId": "YRTRPS4HCB91",
                  "hasAccuratePosition": true,
                  "lastClassifiedCameraBlocked": false,
                  "lastGpsIsAccurate": true,
                  "lastImageTimestamp": "2019-07-26T22:19:07.799Z",
                  "lastImageUrl": "https://images.staging.compology.com/1/raw_device_data/1c331111-1111-1111-1111-04bcbcdeabba",
                  "level": 70,
                  "location": {
                    "id": "71e21111-1111-1111-1111-11f12747b600",
                    "externalId": null,
                    "description": "Inbound Order Testing",
                    "street": "473 Tehama Street, #B",
                    "city": "San Francisco",
                    "state": "CA",
                    "postalCode": "94103",
                    "zip": "94103"
                  },
                  "locationUpdatedAt": "2019-07-19T19:52:40.988Z",
                  "latitude": 30.312946,
                  "longitude": -97.986297,
                  "maybeLastEmptiedAt": "2019-06-18T20:10:17.000Z",
                  "pendingClassification": true,
                  "positionAccuracy": 9.3,
                  "technicianAssigned": false,
                  "updatedAt": "2019-07-26T22:21:24.240Z"
                }
              ],
              "client": [ 
                "X-Compology-Version: 2019-07-25/1"
              ]
            }
            
## Containers for a Customer by external ID [/customers/e/:externalCustomerId/containers]

### List All Containers [GET]

This endpoint uses the *external* ID for the Customer.

#### Parameters
 * `cursor` optional

#### example
```bash
export BASE=https://containers-api.compology.com/v2
export AUTH="Authorization: Bearer <your auth token>"
curl -H 'Accept: application/json' -H "$AUTH" ${BASE}/customers/e/<external customer id>/containers
```

+ Response 200 (application/json)

    + Body
    
            {
              "payload": [
                {
                  "id": "DRAGNDROPWASTE_00014",
                  "containerType": "roll off",
                  "contentType": "refuse",
                  "cubicYards": 20,
                  "description": "20-0009",
                  "externalId": "YRTRPS4HCB91",
                  "hasAccuratePosition": true,
                  "lastClassifiedCameraBlocked": false,
                  "lastGpsIsAccurate": true,
                  "lastImageTimestamp": "2019-07-26T22:19:07.799Z",
                  "lastImageUrl": "https://images.staging.compology.com/1/raw_device_data/1c331111-1111-1111-1111-04bcbcdeabba",
                  "level": 70,
                  "location": {
                    "id": "71e21111-1111-1111-1111-11f12747b600",
                    "externalId": null,
                    "description": "Inbound Order Testing",
                    "street": "473 Tehama Street, #B",
                    "city": "San Francisco",
                    "state": "CA",
                    "postalCode": "94103",
                    "zip": "94103"
                  },
                  "locationUpdatedAt": "2019-07-19T19:52:40.988Z",
                  "latitude": 30.312946,
                  "longitude": -97.986297,
                  "maybeLastEmptiedAt": "2019-06-18T20:10:17.000Z",
                  "pendingClassification": true,
                  "positionAccuracy": 9.3,
                  "technicianAssigned": false,
                  "updatedAt": "2019-07-26T22:21:24.240Z"
                }
              ],
              "client": [ 
                "X-Compology-Version: 2019-07-25/1"
              ]
            }


## Device Posts for a Container [/containers/:containerId/device_posts]

### List All Device Posts [GET]

#### Parameters
 * `cursor` optional

#### example
```bash
export BASE=https://containers-api.compology.com/v2
export AUTH="Authorization: Bearer <your auth token>"
curl -H 'Accept: application/json' -H "$AUTH" ${BASE}/containers/<container id>/device_posts
```

+ Response 200 (application/json)

    + Body

            {
              "payload": [
                {
                  "id": "9c331111-1111-1111-1111-04bcbcdeabba",
                  "organizationId": "dragndropwaste",
                  "container": {
                    "id": "DRAGNDROPWASTE_00014",
                    "contentType": "refuse",
                    "cubicYards": 20,
                    "description": "20-0009",
                    "externalId": "YRTRPS4HCB91"
                  },
                  "customer": {
                    "id": "688f1111-1111-1111-1111-adcf55452f6c",
                    "externalId": "abc123",
                    "name": "Alicia Marie Fricazee"
                  },
                  "location": {
                    "id": "71e21111-1111-1111-1111-75f12747b600",
                    "externalId": null,
                    "description": "Inbound Order Testing"
                  },
                  "occurredAt": "2019-07-26T22:19:07.799Z",
                  "level": null,
                  "maybeWasEmptied": null,
                  "maybeEmptyOccurredAt": null,
                  "latitude": 30.312946,
                  "longitude": -97.986297,
                  "latLonRadius": 9.3,
                  "cameraBlocked": null,
                  "imageUrl": "https://images.staging.compology.com/1/raw_device_data/9c331111-1111-1111-1111-04bcbcdeabba"
                },
                {
                  "id": "18b41111-1111-1111-1111-c0fcbb27485c",
                  "organizationId": "dragndropwaste",
                  "container": {
                    "id": "DRAGNDROPWASTE_00014",
                    "contentType": "refuse",
                    "cubicYards": 20,
                    "description": "20-0009",
                    "externalId": "YRTRPS4HCB91"
                  },
                  "customer": {
                    "id": "688f1111-1111-1111-1111-adcf55452f6c",
                    "externalId": "abc123",
                    "name": "Alicia Marie Fricazee"
                  },
                  "location": {
                    "id": "71e21111-1111-1111-1111-75f12747b600",
                    "externalId": null,
                    "description": "Inbound Order Testing"
                  },
                  "occurredAt": "2019-07-26T18:07:58.364Z",
                  "level": null,
                  "maybeWasEmptied": null,
                  "maybeEmptyOccurredAt": null,
                  "latitude": 30.312938,
                  "longitude": -97.986305,
                  "latLonRadius": 25,
                  "cameraBlocked": null,
                  "imageUrl": "https://images.staging.compology.com/1/raw_device_data/18b41111-1111-1111-1111-c0fcbb27485c"
                },
                {
                  "id": "12861111-1111-1111-1111-b159f4ab04ff",
                  "organizationId": "dragndropwaste",
                  "container": {
                    "id": "DRAGNDROPWASTE_00014",
                    "contentType": "refuse",
                    "cubicYards": 20,
                    "description": "20-0009",
                    "externalId": "YRTRPS4HCB91"
                  },
                  "customer": {
                    "id": null,
                    "externalId": null,
                    "name": null
                  },
                  "location": {
                    "id": null,
                    "externalId": null,
                    "description": null
                  },
                  "occurredAt": "2019-06-28T04:24:40.831Z",
                  "level": 35,
                  "maybeWasEmptied": false,
                  "maybeEmptyOccurredAt": null,
                  "latitude": 30.48846,
                  "longitude": -98.201461,
                  "latLonRadius": 6.5,
                  "cameraBlocked": false,
                  "imageUrl": "https://images.staging.compology.com/1/raw_device_data/12861111-1111-1111-1111-b159f4ab04ff"
                }
              ],
              "client": [
                "X-Compology-Version: 2019-07-25/1"
              ],
              "prev": "https://containers-api.staging.compology.com/v2/containers/DRAGNDROPWASTE_00014/device_posts?cursor=eyJkaXJlY3Rpb24iOiJwcmV2aW91cyIsInJhd0RldmljZURhdGFJbWFnZVRpbWVzdGFtcCI6IjIwMTktMDctMjZUMjI6MTk6MDcuNzk5WiIsInJhd0RldmljZURhdGFJZCI6IjljMzNlYmRhLWIxNmYtNDA1Ni1iZWQ3LTA0YmNiY2RlYWJiYSJ9",
              "next": "https://containers-api.staging.compology.com/v2/containers/DRAGNDROPWASTE_00014/device_posts?cursor=eyJkaXJlY3Rpb24iOiJuZXh0IiwicmF3RGV2aWNlRGF0YUltYWdlVGltZXN0YW1wIjoiMjAxOS0wNi0yOFQwNDoyNDo0MC44MzFaIiwicmF3RGV2aWNlRGF0YUlkIjoiMTI4NjM1MDEtMjAwMy00ZDNkLTk5NDQtYjE1OWY0YWIwNGZmIn0%3D"
            }
            
## Device Post by ID [/containers/:containerId/device_posts/:devicePostId]

### Get Device Post [GET]

#### example
```bash
export BASE=https://containers-api.compology.com/v2
export AUTH="Authorization: Bearer <your auth token>"
curl -H 'Accept: application/json' -H "$AUTH" ${BASE}/containers/<container id>/device_posts/<device post id>
```

+ Response 200 (application/json)

    + Body
    
            {
              "payload": {
                "id": "770771d5-b189-4b6e-aeb4-53e7958e5fc0",
                "organizationId": "dragndropwaste",
                "container": {
                  "id": "DRAGNDROPWASTE_00014",
                  "contentType": "refuse",
                  "cubicYards": 20,
                  "description": "20-0009",
                  "externalId": "YRTRPS4HCB91"
                },  
                "customer": {
                  "id": "688f1525-206e-447a-940c-adcf55452f6c",
                  "externalId": "abc123",
                  "name": "Alicia Marie Fricazee"
                },  
                "location": {
                  "id": "71e2aac9-c884-4f60-8559-75f12747b600",
                  "externalId": null,
                  "description": "Inbound Order Testing"
                },  
                "occurredAt": "2019-06-27T19:59:36.534Z",
                "level": 30,
                "maybeWasEmptied": false,
                "maybeEmptyOccurredAt": null,
                "latitude": 30.488445,
                "longitude": -98.201553,
                "latLonRadius": 24,
                "cameraBlocked": false,
                "imageUrl": "https://images.staging.compology.com/1/raw_device_data/77071111-1111-1111-1111-53e7958e5fc0"
              },  
              "client": [
                "X-Compology-Version: 2019-07-25/1"
              ]   
            }

## Device Post by Timestamp [/containers/:containerId/device_posts/occurred_at/:timestamp]

### Get Device Post [GET]

This will return the Device Post for the specified Container that occurred at
the specified time.  If no Device Post occurred at *exactly* the specified time,
it will return the **latest** Device Post that occurred **before** the specified
time.

The `timestamp` must be specified in a valid ISO-8601 format.

#### example
```bash
export BASE=https://containers-api.compology.com/v2
export AUTH="Authorization: Bearer <your auth token>"
curl -H 'Accept: application/json' -H "$AUTH" ${BASE}/containers/<container id>/device_posts/occurred_at/<timestamp>
```

+ Response 200 (application/json)

    + Body
    
            {
              "payload": {
                "id": "77071111-1111-1111-1111-53e7958e5fc0",
                "organizationId": "dragndropwaste",
                "container": {
                  "id": "DRAGNDROPWASTE_00014",
                  "contentType": "refuse",
                  "cubicYards": 20,
                  "description": "20-0009",
                  "externalId": "YRTRPS4HCB91"
                },  
                "customer": {
                  "id": "688f1111-1111-1111-1111-adcf55452f6c",
                  "externalId": "abc123",
                  "name": "Alicia Marie Fricazee"
                },  
                "location": {
                  "id": "71e21111-1111-1111-1111-75f12747b600",
                  "externalId": null,
                  "description": "Inbound Order Testing"
                },  
                "occurredAt": "2019-06-27T19:59:36.534Z",
                "level": 30,
                "maybeWasEmptied": false,
                "maybeEmptyOccurredAt": null,
                "latitude": 30.488445,
                "longitude": -98.201553,
                "latLonRadius": 24,
                "cameraBlocked": false,
                "imageUrl": "https://images.staging.compology.com/1/raw_device_data/77071111-1111-1111-1111-53e7958e5fc0"
              },  
              "client": [
                "X-Compology-Version: 2019-07-25/1"
              ]   
            }
